**** 내부클래스(inter class)
1. 클래스 내에 선언된 클래스이다.
2. 특정 클래스 내에서만 주로 사용되는 클래스를 내부클래스로 선언한다.
3. 내부클래스에서 외부클래스의 멤버들을 쉽게 접근할 수 있다.
4. 코드의 복잡성을 줄일 수 있다.(캡슐화)
**** 내부클래스 종류와 특징
1. 내부클래스의 종류는 변수의 선언위치에 따른 종류와 동일하다,
2. 유효범위와 성질도 변수와 유사하므로 비교해보면 이해하기가 쉽다.

1) 인스턴스 클래스(instance class) -> 클래스내의 필드 위치
외부클래스의 멤버변수 선언위치에 선언, 인스턴스 멤버처럼 다루어진다.
주로 외부클래스의 인스턴스 멤버들과 관련된 작업에 사용될 목적으로 선언된다.
2) 스태틱 클래스(static class) -> 클래스내의 static위치
외부클래스의 멤버변수 선언위치에 선언, static 멤버처럼 다루어진다.
주로 외부클래스의 static멤버, 특히 static 메서드에서 사용될 목적을 ㅗ선언된다.
3) 지역 클래스 (local class) -> 클래스내의 method내의 위치
외부클래스의 메서드나 초기화블럭안에 선언, 선언된 영역 내부에서만 사용 될 수 있다.
익명 클래스(annoymous class)...상속관게의 부모클래스나 인터페이스, 추상클래스
클래스의 선언과 객체의 생성을 동시에 하는 이름없는 클래스(일회용)


****익명클래스(annoymous class), 무명클래스
1. 클래스의 선언과 객체의 생성을 동시에 하는 이름없는 클래스(일회용)
2. 상속관계의 자식클래스에서 구현클래스를 익명클래스로 대체한다.
new 부모() {
	구현;
};
new 객체생성자() {
	구현;
};
//인터페이스 구현 객체가 필요 없다, 자동으로 익명클래스가 생성된다.
new 인터페이스() {
	오버라이딩; //추상메서드 반드시 구현
};