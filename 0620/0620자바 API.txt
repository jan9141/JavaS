*** 자바 API (Apaalication Programming Interface)
1. 자바를 사용하여 쉽게 구현할 수 있도록 하는 클래스 라이브러리의 집합
2. 자바에서 제공하는 명령어


java.lang
-자바 프로그래밍을 위한 가장 기본적인 패키지와 클래스를 포함하고 있다.
-자동으로 import됨

java.util
-프로그램을 제어하기 위한 클래스와 데이터를 효율적으로 저장하기 위한 클래스들을 담고있다.
-날짜,시간,벡터,해시맴 등

java.io
-키보드,모니터,프린터,파일등을 제어할 수 있는 클래스들의 모음


패키지
-서로 관련된 클래스와 인터페이스
-하나의 응용프로그램은 한 개 이상의 패키지로 작성

import
다른 패키지에 작성된 클래스 사용 ** java.lang 패키지는 생략
*import를 이용하지 않는 경우
-소스에 클래스 이름의 완전 경로명 사용

*필요한 클래스만 import
-소스 시작 부분에 클래스의 경로명 import
-import 패키지 클래스
-소스에는 클래스 명만 명시하면 됨

*패키지 전체를 import
- 소스 시작부분에 패키지의 경로명 *import
-import 패키지. * (포인트지정)
-소스에는 클래스명만 명시하면 됨


* 클래스 파일 저장되는 위치
-클래스나 인터페이스가 컴파일되면 클래스 파일 생성
-클래스 파일은 패키지로 선언된 디렉토리에 저장
-import java.util.*;
public boolean equals(object obj) : obj가 가리키는 객체와 현재 객체를 비교하여 같으면 true를 리턴
public Class getClass() : 현 객체의 런타임 클래스를 리턴
			객체의 class 정보를 담은 class 객체 리턴
			class 객체의 getName() 메소드는 객체의 클래스 이름 리턴
public int hashCode() : 현객체에 대한 해시 코드 값 리턴
			객체의 해시코드 값을 리턴 객체마다 다름
public String toString() : 현객체에 대한 문자열 표현을 리턴

----------------------------------------------------------------------------
Wrapper클래스
-자바의 기본 타입을 클래스화한 8개 클래스를 롱칭
용도
- 객체만 사용할 수 있는 컬렉션 등에 기본 다입의 값을 사용하기 위해 -> Wrapper 객체로 만들어 사용
Wrapper >> Generic 타입에 사용 >> 컬렉션에 사용
- 박싱 : 기본 타입의 데이터를 래퍼 클래스의 인스턴스로 변환 하는 과정
-언박싱 : 래퍼 클래스의 인스턴스에 저장된 값을 다시 기본 타입의 데이터로 꺼내는 과정
오토 박싱&언박싱
-JDK 1.5 부터는 박싱과 언박싱이 필요한 상황에서 자바 컴파일러가 이를 자동으로 처리해준다
------------------------------------------------------------------------------
스트링 리터럴
-자바 가상 기계 내부에서 리터럴 테이블에 저장되고 관리됨
-응용프로그램에서 공유됨
스트링객체는 수정 불가능
-리터럴 스트링이든 new String()을 생성했든 객체의 문자열 수정 불가능
두스트링을 비교할 땐 반드시 equals()를 사용해야함
equals()는 내용을 비교하기 때문

========================================
StringBuffer 클래스
-가변 스트링을 다루는 클래스
-String클래스와 달리 문자열 변경 가능
생성된 이후에도 문자열의 내용을 계속 수정 가능
-문자열을 저장할 수 있는 용량을 갖음
-용량이 작으면 자동으로 수정되므로 프로그래머는 크게 신경 쓸 필요없음

===================================================
StringTokenizer 클래스
구분문자를 기준으로 문자열을 분리하는 클래스
-구분문자: 문자열을 구분할 때 사용되는 문자
-토큰: 구분 문자로 분리된 문자열

=================================================
패키지JAVA.UTIL
다양한 유틸리티 클래스
-프로그램에서 이용할 수 있는 각종 유틸리티가 제공되는 패키지
-Dollection.Set.List.Queue.Map등의 다양한 인터페이스와 클래스
-여러 항목의 원소를 가변적으로 삽입과 삭제가 편리

===========================================

<DATE>
-시간정보를 표현하는 기본 클래스
-더이상 사용을 권장하지 않음
메소드 getTime()
*클래스 DateFormat
--패키지 java.text에 속하는 클래스로 시간정보의 출력형식에 제공
==========================================
<calendar>
날짜와 시간에 관한 정보를 제공하는 추상클래스
-자체의 생성자를 이용하여 객체를 생성 불가능
-정적 메소드getInstance()
--현재 시간 정보를 갖는 객체를 생성해주는
-메소드 getTime()
--반환형을 Date로서, 바로 출력하면 영문 표현의 시간 정보를 출력한다.
===================================================
타임존
대게 지역 또는 국가의 현지 시간을 나타내며, 주로 해당 국가에 의해 법적으로 지정된다.
대게 지역 또는 국가의 현지 시간을 나타내며, 주로 해당 국가에 의해 법적으로 지정된다
UTC vs GMT
- 경도 0도에 위치한 영국 런던 그리니치에 있는 왕립 천문대 시간
UTC
협정세계시
-국제 표준시로 타임존이 아니다.
-즉 UTC를 공식적으로 현지 시간으로 사용하는 국가나 지역은 없다.